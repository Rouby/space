scalar Vector

interface Positionable {
	id: ID!
	position: Vector!
}

interface SensorRange {
	id: ID!
	sensorRange: Float!
}

union TrackGalaxyEvent =
	| PositionableApppearsEvent
	| PositionableMovesEvent
	| PositionableDisappearsEvent

type PositionableApppearsEvent {
	subject: Positionable!
}
type PositionableMovesEvent {
	subject: Positionable!
}
type PositionableDisappearsEvent {
	subject: Positionable!
}

union TrackStarSystemEvent = TaskForceShipCommisionProgressEvent

type TaskForceShipCommisionProgressEvent {
	subject: TaskForceShipCommision!
}

type Subscription {
	trackGalaxy(gameId: ID!): TrackGalaxyEvent!
	trackStarSystem(starSystemId: ID!): TrackStarSystemEvent!
}
