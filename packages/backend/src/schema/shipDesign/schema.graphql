type ShipDesign {
	id: ID!
	name: String!
	description: String!
	owner: Player!
	decommissioned: Boolean!
	previousDesign: ShipDesign
	costs: [ResourceCost!]!
	components: [ShipComponent!]!
}

type ResourceCost {
	resource: Resource!
	quantity: Float!
}

extend type Game {
	shipDesigns: [ShipDesign!]!
}

extend type Player {
	shipDesigns: [ShipDesign!]!
}

input ShipDesignInput {
	name: String!
	description: String!
	resourceId: ID!
	componentIds: [ID!]!
	previousDesignId: ID
}

type Mutation {
	createShipDesign(gameId: ID!, design: ShipDesignInput!): ShipDesign!
}
