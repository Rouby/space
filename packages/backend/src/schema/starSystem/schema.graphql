type StarSystem implements Positionable {
	id: ID!
	name: String!
	position: Vector!
	owner: Player
	sensorRange: Float
	discoveries: [Discovery!]
	discoveryProgress: Float
	resourceDepots: [ResourceDepot!]
	populations: [Population!]
	isVisible: Boolean!
	lastUpdate: DateTime
}

union Discovery = ResourceDiscovery | UnknownDiscovery

type ResourceDiscovery {
	id: ID!
	resource: Resource!
	remainingDeposits: Float!
	miningRate: Float!
}

type UnknownDiscovery {
	id: ID!
}

type ResourceDepot {
	id: ID!
	resource: Resource!
	quantity: Float!
}

type Population {
	id: ID!
	amount: BigInt!
}

extend type Game {
	starSystems: [StarSystem!]!
}

type Query {
	starSystem(id: ID!): StarSystem!
}
