apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-secrets
  labels:
    app: postgres
data:
  POSTGRES_DB: {{ .Values.database.user }}
  POSTGRES_USER: {{ .Values.database.password }}
  POSTGRES_PASSWORD: {{ .Values.database.name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "space.fullname" . }}-database
  labels:
    {{- include "space.labels" . | nindent 4 }}
    {{- include "space.selectorLabelsDatabase" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "space.selectorLabelsDatabase" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "space.labels" . | nindent 8 }}
        {{- include "space.selectorLabelsDatabase" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "space.fullname" . }}-database
          securityContext:
            {}
          image: "postgres:17"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: postgres-secrets
          ports:
            - name: db
              containerPort: 5432
              protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-volume
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
